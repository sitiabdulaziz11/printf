#include "main.h"

/**
 * print_p - pointer.
 * @args: arg Return: number of characters printed.
 */
int print_p(va_list args)
{
	void *ptr = va_arg(args, void *);
	unsigned long int address = (unsigned long int)ptr;

	_putchar('0');
	_putchar('x');
	return (print_hex(address, 16) + 2);
}
/**
 * print_hex - print hexadecimal representation of a number
 * @num: number to be printed
 * @width: minimum width of the hexadecimal representation
 *
 * Return: number of characters printed
 */
int print_hex(unsigned long int num, int width)
{
	char hex_digits[] = "0123456789abcdef";
	int i, j, count = 0;
	unsigned long int temp = num;

	int num_digits = 0;
	while (temp != 0)
	{
		 temp /= 16;
		 num_digits++;
	}
	 for (i = 0; i < (width - num_digits); i++)
	 {
		 _putchar('0');
		 count++;
	 }
	  if (num == 0)
	  {
		  _putchar('0');
		  count++;
	  }
	  else
	  {
		  char hex_value[16];
		  int i = 0;

		  while (num != 0)
		  {
			  int remainder = num % 16;
			  hex_value[i] = hex_digits[remainder];
			  num /= 16;
			  i++;
		  }

		  for (j = i - 1; j >= 0; j--)
		  {
			  _putchar(hex_value[j]);
			  count++;
		  }
	  }
	  return count;
}

